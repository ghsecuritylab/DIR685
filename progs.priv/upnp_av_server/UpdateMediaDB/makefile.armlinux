# List all object files here
OFILES = \
	DBAPI.o\
	PortingFunctions.o\
	MP3Tag2.o	\
	DBLower.o\
	FileFormat.o\
	ScanDisk.o \
	DiskManager.o \
	MyString.o	\
	common.o \
	ExecvCommand.o \
	ErrHandler.o \
	EmbeddedMediaServer.o

	#MP3Tag2.o	\
# Compiler command name

# Compiler flags applied to all files
# Optional flags: -D_VERBOSE -D_DEBUG -DSPAWN_BROWSE_THREAD -D_TEMPDEBUG
# -g puts debug symbols
# -DSPAWN_BROWSE_THREAD makes it so each browse thread spawns a thread (recommended only if browse request takes a long time)
#
CFLAGS_DEBUG=\
	-g	\
	-D_DEBUG

CFLAGS = -Wall -D_POSIX -I./Posix -I../ -I./ -I../../../util -I../ID3/ \
	$(CFLAGS_DEBUG)

#-I/usr/include

CC = arm-linux-gcc
CXX= arm-linux-g++

# Search paths
VPATH = src: ./ ../ ../../../util ../ID3

# Name of the executable
EXENAME = EmbeddedMediaServer

# Builds all object files and executable
${EXENAME} : $(OFILES)
	$(CXX) $(CFLAGS) -o ${EXENAME} $(OFILES) \
	-lsqlite	\
	-lpthread	\
	../ID3/libz.a

#	../ID3/libid3.a \

# Macro rule for all object files.
$(OFILES) : \
	MediaDB.h\
	MediaTraversal.h\
	FileFormat.h \
	ExecvCommand.h \
	MP3Tag2.h	\
	ErrHandler.h
install: EmbeddedMediaServer
	cp -f EmbeddedMediaServer ../Posix

# Clean up
clean :
	rm -f $(OFILES) ${EXENAME} ${EXENAME}.exe data.sqlite
